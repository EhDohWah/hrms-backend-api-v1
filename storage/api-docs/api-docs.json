{
    "openapi": "3.0.0",
    "info": {
        "title": "HRMS API Documentation",
        "description": "HRMS Backend API documentation with OpenAPI/Swagger",
        "contact": {
            "email": "admin@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1",
            "description": "API Server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticates user and returns access token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many login attempts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Too many login attempts. Please try again in 60 seconds."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Revokes the current access token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh authentication token",
                "description": "Generates a new token for the authenticated user",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employees": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Get all employees",
                "description": "Returns a list of all employees",
                "operationId": "getEmployees",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Employee"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Employees"
                ],
                "summary": "Create a new employee",
                "operationId": "2475af536398d342aca2fd7f60f9af3a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "staff_id",
                                    "first_name",
                                    "last_name",
                                    "gender",
                                    "date_of_birth"
                                ],
                                "properties": {
                                    "staff_id": {
                                        "type": "string",
                                        "example": "EMP001"
                                    },
                                    "subsidiary": {
                                        "type": "string",
                                        "example": "SMRU"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "middle_name": {
                                        "type": "string",
                                        "example": "William"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "mobile_phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employees/{id}": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Get a single employee",
                "description": "Returns a single employee by ID",
                "operationId": "getEmployeeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employee"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Employees"
                ],
                "summary": "Update employee details",
                "description": "Updates an existing employee record with the provided information",
                "operationId": "f1e833660cfbccbfbdef00c84e24c5cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Employee information to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "staff_id",
                                    "first_name",
                                    "last_name",
                                    "gender",
                                    "date_of_birth",
                                    "status"
                                ],
                                "properties": {
                                    "staff_id": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "EMP001"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "middle_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "William",
                                        "nullable": true
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "maxLength": 10,
                                        "example": "male"
                                    },
                                    "date_of_birth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    },
                                    "religion": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "birth_place": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "identification_number": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "nullable": true
                                    },
                                    "passport_number": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "nullable": true
                                    },
                                    "bank_name": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "bank_branch": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "bank_account_name": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "bank_account_number": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "office_phone": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "nullable": true
                                    },
                                    "mobile_phone": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "nullable": true
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 175.5,
                                        "nullable": true
                                    },
                                    "weight": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 70.5,
                                        "nullable": true
                                    },
                                    "permanent_address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "current_address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "stay_with": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "military_status": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "marital_status": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "nullable": true
                                    },
                                    "spouse_name": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "spouse_occupation": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "father_name": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "father_occupation": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "mother_name": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "mother_occupation": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "driver_license_number": {
                                        "type": "string",
                                        "maxLength": 50,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "staff_id": {
                                            "type": "string",
                                            "example": "EMP001"
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Employees"
                ],
                "summary": "Delete an employee",
                "operationId": "12f385259154107ce23e13cf62d2c158",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee deleted successfully"
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employees/site-records": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Get Site records",
                "description": "Get Site records",
                "operationId": "37701ee04f72091dcdd26cc910ec7367",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/grants/upload": {
            "post": {
                "tags": [
                    "Grants"
                ],
                "summary": "Upload grant data from Excel file",
                "description": "Upload an Excel file with multiple sheets containing grant header and item records",
                "operationId": "6e724c8994368d8c0c75c1eaebe4d4f5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Excel file to upload (xlsx, xls, csv)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Grant data imported successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Grant data import completed"
                                        },
                                        "processed_grants": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "warnings": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Import failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to import grant data"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/grants": {
            "get": {
                "tags": [
                    "Grants"
                ],
                "summary": "List all grants with their items",
                "description": "Returns a list of grants and their associated items.",
                "operationId": "getGrants",
                "responses": {
                    "200": {
                        "description": "List of grants with items retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Grants retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "GR-2023-001"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Health Initiative Grant"
                                                    },
                                                    "grant_items": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "grant_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "bg_line": {
                                                                    "type": "string",
                                                                    "example": "BL-123"
                                                                },
                                                                "grant_position": {
                                                                    "type": "string",
                                                                    "example": "Project Manager"
                                                                },
                                                                "grant_salary": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 75000
                                                                },
                                                                "grant_benefit": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 15000
                                                                },
                                                                "grant_level_of_effort": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 0.75
                                                                },
                                                                "grant_position_number": {
                                                                    "type": "string",
                                                                    "example": "POS-001"
                                                                },
                                                                "grant_cost_by_monthly": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 7500
                                                                },
                                                                "grant_total_amount": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 90000
                                                                },
                                                                "grant_total_cost_by_person": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 90000
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - User not logged in or token expired"
                    },
                    "403": {
                        "description": "Unauthorized - User does not have permission to access grants"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve grants"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Grants"
                ],
                "summary": "Create a new grant",
                "description": "Store a new grant with the provided details",
                "operationId": "a14c269cef568884cae7f1354a4111de",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "GR-2023-001"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Health Initiative Grant"
                                    },
                                    "budget_line": {
                                        "type": "string",
                                        "example": "BL-123",
                                        "nullable": true
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-31",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Grant created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Grant"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/grants/items": {
            "post": {
                "tags": [
                    "Grants"
                ],
                "summary": "Store a new grant item",
                "description": "Creates a new grant item associated with an existing grant",
                "operationId": "storeGrantItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "grant_id",
                                    "bg_line"
                                ],
                                "properties": {
                                    "grant_id": {
                                        "description": "ID of the existing grant",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "bg_line": {
                                        "description": "Budget line identifier",
                                        "type": "string",
                                        "example": "BL-123"
                                    },
                                    "grant_position": {
                                        "description": "Position title",
                                        "type": "string",
                                        "example": "Project Manager"
                                    },
                                    "grant_salary": {
                                        "description": "Salary amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 75000
                                    },
                                    "grant_benefit": {
                                        "description": "Benefits amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 15000
                                    },
                                    "grant_level_of_effort": {
                                        "description": "Level of effort (0-1)",
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.75
                                    },
                                    "grant_position_number": {
                                        "description": "Position identifier",
                                        "type": "string",
                                        "example": "POS-001"
                                    },
                                    "grant_cost_by_monthly": {
                                        "description": "Monthly cost",
                                        "type": "number",
                                        "format": "float",
                                        "example": 7500
                                    },
                                    "grant_total_cost_by_person": {
                                        "description": "Total cost per person",
                                        "type": "number",
                                        "format": "float",
                                        "example": 90000
                                    },
                                    "grant_total_amount": {
                                        "description": "Total grant amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 90000
                                    },
                                    "position_id": {
                                        "description": "Position reference ID",
                                        "type": "string",
                                        "example": "P123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Grant item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GrantItem"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or duplicate item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Duplicate item with this BG Line already exists for this grant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - User not logged in or token expired"
                    },
                    "403": {
                        "description": "Unauthorized - User does not have permission"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create grant item"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/interviews": {
            "get": {
                "tags": [
                    "Interviews"
                ],
                "summary": "Get all interviews",
                "description": "Get a list of all interviews",
                "operationId": "d6c874e8fb2ed408dfbddb9f5d75333f",
                "responses": {
                    "200": {
                        "description": "Interviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Interviews retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "job_position": {
                                                        "type": "string"
                                                    },
                                                    "interview_date": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "start_time": {
                                                        "type": "string",
                                                        "format": "time"
                                                    },
                                                    "end_time": {
                                                        "type": "string",
                                                        "format": "time"
                                                    },
                                                    "interview_mode": {
                                                        "type": "string",
                                                        "enum": [
                                                            "in-person",
                                                            "virtual"
                                                        ]
                                                    },
                                                    "interview_status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "scheduled",
                                                            "completed",
                                                            "cancelled"
                                                        ]
                                                    },
                                                    "score": {
                                                        "type": "number",
                                                        "nullable": true
                                                    },
                                                    "feedback": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "resume": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "created_by": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "updated_by": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve interviews"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Interviews"
                ],
                "summary": "Create a new interview",
                "description": "Create a new interview record",
                "operationId": "b5d1a4b2536a5a593659901c3887a6d6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "job_position",
                                    "interview_date",
                                    "start_time",
                                    "end_time",
                                    "interview_mode",
                                    "interview_status"
                                ],
                                "properties": {
                                    "job_position": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "interview_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "interview_mode": {
                                        "type": "string",
                                        "enum": [
                                            "in-person",
                                            "virtual"
                                        ]
                                    },
                                    "interview_status": {
                                        "type": "string",
                                        "enum": [
                                            "scheduled",
                                            "completed",
                                            "cancelled"
                                        ]
                                    },
                                    "score": {
                                        "type": "number",
                                        "nullable": true
                                    },
                                    "feedback": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "resume": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "updated_by": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Interview created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Interview created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create interview"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns a list of all users with their roles and permissions",
                "operationId": "indexUsers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "john@example.com"
                                            },
                                            "last_login_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "roles": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "Admin"
                                                }
                                            },
                                            "permissions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "user.read"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user",
                "description": "Create a new user.",
                "operationId": "262eb5ca1fdea354023c0a8870442c1e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "hr-manager",
                                            "hr-assistant",
                                            "employee"
                                        ],
                                        "example": "employee"
                                    },
                                    "profile_picture": {
                                        "description": "Optional profile picture file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating user"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "description": "Display a single user.",
                "operationId": "6946bbab7898f59a09e3c8e529a38907",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing user",
                "description": "Update a user.",
                "operationId": "05028d02ea3e9a99abd6260cfe05b179",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "profile_picture": {
                                        "description": "Optional profile picture file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "description": "Delete a user.",
                "operationId": "b3d28da5dc9de7fc1bd425f93b54ff7b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/profile-picture": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile picture",
                "description": "Update user profile picture.",
                "operationId": "77a307591501c7e540f0204d7ccda6c7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "profile_picture"
                                ],
                                "properties": {
                                    "profile_picture": {
                                        "description": "Profile picture file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile picture updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile picture updated successfully"
                                        },
                                        "profile_picture": {
                                            "type": "string",
                                            "example": "profile_pictures/image.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/username": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user name",
                "description": "Update user name.",
                "operationId": "802d461d381ce58b4d221c8fd4bcecd4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Username updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Username updated successfully"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/email": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user email",
                "description": "Update user email.",
                "operationId": "5f93bb4fb100eaf0cb0b4d6a51896ebd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email updated successfully"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john@example.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/password": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user password",
                "description": "Update user password.",
                "operationId": "fd7db07f5a5df29f32f21cbfb2ed87d9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "confirm_password"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "current123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new123"
                                    },
                                    "confirm_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Current password is incorrect"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get authenticated user details",
                "description": "Returns the authenticated user's basic details along with their roles and permissions.",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "id",
                                        "name",
                                        "email",
                                        "roles",
                                        "permissions"
                                    ],
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the user",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "description": "Full name of the user",
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "description": "Email address of the user",
                                            "type": "string",
                                            "format": "email",
                                            "example": "john@example.com"
                                        },
                                        "last_login_at": {
                                            "description": "The date and time when the user last logged in",
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true
                                        },
                                        "roles": {
                                            "description": "List of roles assigned to the user",
                                            "type": "array",
                                            "items": {
                                                "description": "A role name",
                                                "type": "string",
                                                "example": "Admin"
                                            }
                                        },
                                        "permissions": {
                                            "description": "List of permissions granted to the user",
                                            "type": "array",
                                            "items": {
                                                "description": "A permission identifier",
                                                "type": "string",
                                                "example": "user.read"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - The request does not have valid authentication credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Candidate": {
                "title": "Candidate",
                "description": "Candidate model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "candidate_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "phone": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "resume": {
                        "type": "string",
                        "example": "resume_file.pdf"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Department": {
                "title": "Department",
                "description": "Department model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Human Resources"
                    },
                    "description": {
                        "type": "string",
                        "example": "Department responsible for HR activities"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "admin"
                    },
                    "updated_by": {
                        "type": "string",
                        "example": "admin"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Employee": {
                "required": [
                    "staff_id",
                    "first_name",
                    "last_name",
                    "gender",
                    "date_of_birth",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "staff_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "subsidiary": {
                        "type": "string",
                        "default": "SMRU",
                        "enum": [
                            "SMRU",
                            "BHF"
                        ]
                    },
                    "user_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "middle_name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "gender": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date"
                    },
                    "status": {
                        "type": "string",
                        "default": "Expats",
                        "enum": [
                            "Expats",
                            "Local ID",
                            "Local non ID"
                        ]
                    },
                    "religion": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "birth_place": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "identification_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "social_security_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "tax_identification_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "passport_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "bank_name": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "bank_branch": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "bank_account_name": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "bank_account_number": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "office_phone": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true
                    },
                    "mobile_phone": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true
                    },
                    "permanent_address": {
                        "type": "string",
                        "nullable": true
                    },
                    "current_address": {
                        "type": "string",
                        "nullable": true
                    },
                    "stay_with": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "military_status": {
                        "type": "boolean",
                        "default": false
                    },
                    "marital_status": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true
                    },
                    "spouse_name": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "spouse_occupation": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "father_name": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "father_occupation": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "mother_name": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "mother_occupation": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "driver_license_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Employment": {
                "required": [
                    "employee_id",
                    "employment_type_id",
                    "start_date",
                    "position_id",
                    "department_id",
                    "work_location_id",
                    "position_salary",
                    "probation_salary"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "employee_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "employment_type_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "probation_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "position_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "department_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "work_location_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "position_salary": {
                        "type": "number",
                        "format": "float"
                    },
                    "probation_salary": {
                        "type": "number",
                        "format": "float"
                    },
                    "supervisor_id": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "employee_tax": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "fte": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean",
                        "default": true
                    },
                    "health_welfare": {
                        "type": "boolean",
                        "default": false
                    },
                    "pvd": {
                        "type": "boolean",
                        "default": false
                    },
                    "saving_fund": {
                        "type": "boolean",
                        "default": false
                    },
                    "social_security_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "EmploymentType": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Grant": {
                "title": "Grant",
                "description": "Grant model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Research Grant 2023"
                    },
                    "code": {
                        "type": "string",
                        "example": "RG-2023-001"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-12-31"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "admin"
                    },
                    "updated_by": {
                        "type": "string",
                        "example": "admin"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "grant_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GrantItem"
                        }
                    }
                },
                "type": "object"
            },
            "GrantItem": {
                "title": "Grant Item",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "grant_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "bg_line": {
                        "type": "string",
                        "example": "BL-123",
                        "nullable": true
                    },
                    "grant_position": {
                        "type": "string",
                        "example": "Project Manager",
                        "nullable": true
                    },
                    "grant_salary": {
                        "type": "number",
                        "format": "float",
                        "example": 75000,
                        "nullable": true
                    },
                    "grant_benefit": {
                        "type": "number",
                        "format": "float",
                        "example": 15000,
                        "nullable": true
                    },
                    "grant_level_of_effort": {
                        "type": "string",
                        "example": "0.75",
                        "nullable": true
                    },
                    "grant_position_number": {
                        "type": "string",
                        "example": "POS-001",
                        "nullable": true
                    },
                    "grant_cost_by_monthly": {
                        "type": "string",
                        "example": "7500",
                        "nullable": true
                    },
                    "grant_total_cost_by_person": {
                        "type": "string",
                        "example": "90000",
                        "nullable": true
                    },
                    "grant_benefit_fte": {
                        "type": "number",
                        "format": "float",
                        "example": 0.75,
                        "nullable": true
                    },
                    "position_id": {
                        "type": "string",
                        "example": "P123",
                        "nullable": true
                    },
                    "grant_total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 90000,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "GrantPosition": {
                "title": "Grant Position",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "grant_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "budget_line": {
                        "type": "string",
                        "example": "BL-123"
                    },
                    "grant_salary": {
                        "type": "number",
                        "format": "float",
                        "example": 75000
                    },
                    "grant_benefit": {
                        "type": "number",
                        "format": "float",
                        "example": 15000
                    },
                    "grant_level_of_effort": {
                        "type": "number",
                        "format": "float",
                        "example": 0.75
                    },
                    "grant_position_number": {
                        "type": "string",
                        "example": "POS-001"
                    },
                    "grant_monthly_cost": {
                        "type": "number",
                        "format": "float",
                        "example": 7500
                    },
                    "grant_total_person_cost": {
                        "type": "number",
                        "format": "float",
                        "example": 90000
                    },
                    "grant_total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 90000
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Interview": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "candidate_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "grant_position_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "interviewer_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "interview_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time",
                        "nullable": true
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time",
                        "nullable": true
                    },
                    "interview_mode": {
                        "type": "string",
                        "enum": [
                            "in-person",
                            "virtual"
                        ],
                        "nullable": true
                    },
                    "interview_status": {
                        "type": "string",
                        "enum": [
                            "scheduled",
                            "completed",
                            "cancelled"
                        ]
                    },
                    "score": {
                        "type": "number",
                        "nullable": true
                    },
                    "feedback": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "LetterTemplate": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200,
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Position": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "last_login_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_login_ip": {
                        "type": "string",
                        "example": "192.168.1.1"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "admin"
                    },
                    "updated_by": {
                        "type": "string",
                        "example": "admin"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "admin"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "user.read"
                        }
                    }
                },
                "type": "object"
            },
            "WorkLocation": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        },
        {
            "name": "Employees",
            "description": "API Endpoints for Employee management"
        },
        {
            "name": "Grants",
            "description": "API Endpoints for managing grants"
        },
        {
            "name": "Interviews",
            "description": "API Endpoints for managing interviews"
        },
        {
            "name": "Users",
            "description": "API Endpoints for user management"
        }
    ]
}