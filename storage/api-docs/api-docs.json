{
    "openapi": "3.0.0",
    "info": {
        "title": "HRMS API Documentation",
        "description": "HRMS Backend API documentation with OpenAPI/Swagger",
        "contact": {
            "email": "admin@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1",
            "description": "API Server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticates user and returns access token",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many login attempts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Too many login attempts. Please try again in 60 seconds."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Revokes the current access token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh authentication token",
                "description": "Generates a new token for the authenticated user",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/departments": {
            "get": {
                "tags": [
                    "Departments"
                ],
                "summary": "Get all departments",
                "description": "Get a list of all departments",
                "operationId": "ed301ff184301a8a43e12f111f178491",
                "responses": {
                    "200": {
                        "description": "Departments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Departments retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "created_by": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "updated_by": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Departments"
                ],
                "summary": "Create a new department",
                "description": "Create a new department record",
                "operationId": "aba3da4ceba085b4372b051408640129",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Department created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Department created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/departments/{id}": {
            "get": {
                "tags": [
                    "Departments"
                ],
                "summary": "Get a specific department",
                "description": "Get details of a specific department by ID",
                "operationId": "54c3150b5a05e5ea000b06738250e3bc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the department",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Department retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "created_by": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "updated_by": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Department not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Departments"
                ],
                "summary": "Update a department",
                "description": "Update an existing department record",
                "operationId": "7bed210c31f95f387c16fa4193171dba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the department",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Department updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Department updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Department not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Departments"
                ],
                "summary": "Delete a department",
                "description": "Delete a department record",
                "operationId": "2b560600ee506df27168d372230feca2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the department",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Department deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Department not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employees": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Get all employees",
                "description": "Returns a list of all employees with related data",
                "operationId": "getEmployees",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employees retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Employee"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Employees"
                ],
                "summary": "Create a new employee",
                "description": "Creates a new employee",
                "operationId": "createEmployee",
                "requestBody": {
                    "description": "Employee data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "staff_id",
                                    "first_name",
                                    "last_name",
                                    "gender",
                                    "date_of_birth",
                                    "status"
                                ],
                                "properties": {
                                    "staff_id": {
                                        "description": "Unique staff identifier",
                                        "type": "string",
                                        "example": "EMP001"
                                    },
                                    "subsidiary": {
                                        "description": "Employee subsidiary",
                                        "type": "string",
                                        "enum": [
                                            "SMRU",
                                            "BHF"
                                        ],
                                        "example": "SMRU"
                                    },
                                    "first_name": {
                                        "description": "Employee first name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "middle_name": {
                                        "description": "Employee middle name",
                                        "type": "string",
                                        "example": "William"
                                    },
                                    "last_name": {
                                        "description": "Employee last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "gender": {
                                        "description": "Employee gender",
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "date_of_birth": {
                                        "description": "Employee date of birth",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "status": {
                                        "description": "Employee status",
                                        "type": "string",
                                        "enum": [
                                            "Expats",
                                            "Local ID",
                                            "Local non ID"
                                        ],
                                        "example": "Expats"
                                    },
                                    "religion": {
                                        "description": "Employee religion",
                                        "type": "string",
                                        "example": "Buddhism"
                                    },
                                    "birth_place": {
                                        "description": "Employee birth place",
                                        "type": "string",
                                        "example": "Bangkok"
                                    },
                                    "identification_number": {
                                        "description": "Employee ID number",
                                        "type": "string",
                                        "example": "1234567890123"
                                    },
                                    "social_security_number": {
                                        "description": "Employee social security number",
                                        "type": "string",
                                        "example": "SSN123456"
                                    },
                                    "tax_number": {
                                        "description": "Employee tax number",
                                        "type": "string",
                                        "example": "TAX123456"
                                    },
                                    "passport_number": {
                                        "description": "Employee passport number",
                                        "type": "string",
                                        "example": "P123456"
                                    },
                                    "bank_name": {
                                        "description": "Employee bank name",
                                        "type": "string",
                                        "example": "Bangkok Bank"
                                    },
                                    "bank_branch": {
                                        "description": "Employee bank branch",
                                        "type": "string",
                                        "example": "Silom"
                                    },
                                    "bank_account_name": {
                                        "description": "Employee bank account name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "bank_account_number": {
                                        "description": "Employee bank account number",
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "office_phone": {
                                        "description": "Employee office phone",
                                        "type": "string",
                                        "example": "021234567"
                                    },
                                    "mobile_phone": {
                                        "description": "Employee mobile phone",
                                        "type": "string",
                                        "example": "+66812345678"
                                    },
                                    "permanent_address": {
                                        "description": "Employee permanent address",
                                        "type": "string",
                                        "example": "123 Main St, Bangkok"
                                    },
                                    "current_address": {
                                        "description": "Employee current address",
                                        "type": "string",
                                        "example": "456 Second St, Bangkok"
                                    },
                                    "stay_with": {
                                        "description": "Employee stays with",
                                        "type": "string",
                                        "example": "Family"
                                    },
                                    "military_status": {
                                        "description": "Employee military status",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "marital_status": {
                                        "description": "Employee marital status",
                                        "type": "string",
                                        "example": "Single"
                                    },
                                    "spouse_name": {
                                        "description": "Employee spouse name",
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "spouse_occupation": {
                                        "description": "Employee spouse occupation",
                                        "type": "string",
                                        "example": "Doctor"
                                    },
                                    "father_name": {
                                        "description": "Employee father name",
                                        "type": "string",
                                        "example": "James Doe"
                                    },
                                    "father_occupation": {
                                        "description": "Employee father occupation",
                                        "type": "string",
                                        "example": "Engineer"
                                    },
                                    "mother_name": {
                                        "description": "Employee mother name",
                                        "type": "string",
                                        "example": "Mary Doe"
                                    },
                                    "mother_occupation": {
                                        "description": "Employee mother occupation",
                                        "type": "string",
                                        "example": "Teacher"
                                    },
                                    "driver_license_number": {
                                        "description": "Employee driver license number",
                                        "type": "string",
                                        "example": "DL123456"
                                    },
                                    "email": {
                                        "description": "Employee email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Employee"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employees/{id}": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Get a single employee",
                "description": "Returns a single employee by ID with related data",
                "operationId": "getEmployeeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Employee"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Employees"
                ],
                "summary": "Update employee details",
                "description": "Updates an existing employee record with the provided information",
                "operationId": "updateEmployee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Employee information to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "staff_id",
                                    "first_name",
                                    "last_name",
                                    "gender",
                                    "date_of_birth",
                                    "status"
                                ],
                                "properties": {
                                    "staff_id": {
                                        "description": "Unique staff identifier",
                                        "type": "string",
                                        "maxLength": 50,
                                        "example": "EMP001"
                                    },
                                    "subsidiary": {
                                        "description": "Employee subsidiary",
                                        "type": "string",
                                        "enum": [
                                            "SMRU",
                                            "BHF"
                                        ],
                                        "example": "SMRU"
                                    },
                                    "first_name": {
                                        "description": "Employee first name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "middle_name": {
                                        "description": "Employee middle name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "William",
                                        "nullable": true
                                    },
                                    "last_name": {
                                        "description": "Employee last name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "gender": {
                                        "description": "Employee gender",
                                        "type": "string",
                                        "maxLength": 10,
                                        "example": "male"
                                    },
                                    "date_of_birth": {
                                        "description": "Employee date of birth",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "status": {
                                        "description": "Employee status",
                                        "type": "string",
                                        "enum": [
                                            "Expats",
                                            "Local ID",
                                            "Local non ID"
                                        ],
                                        "example": "Expats"
                                    },
                                    "religion": {
                                        "description": "Employee religion",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "birth_place": {
                                        "description": "Employee birth place",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "identification_number": {
                                        "description": "Employee ID number",
                                        "type": "string",
                                        "maxLength": 50,
                                        "nullable": true
                                    },
                                    "social_security_number": {
                                        "description": "Employee social security number",
                                        "type": "string",
                                        "maxLength": 50,
                                        "nullable": true
                                    },
                                    "tax_number": {
                                        "description": "Employee tax number",
                                        "type": "string",
                                        "maxLength": 50,
                                        "nullable": true
                                    },
                                    "passport_number": {
                                        "description": "Employee passport number",
                                        "type": "string",
                                        "maxLength": 50,
                                        "nullable": true
                                    },
                                    "bank_name": {
                                        "description": "Employee bank name",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "bank_branch": {
                                        "description": "Employee bank branch",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "bank_account_name": {
                                        "description": "Employee bank account name",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "bank_account_number": {
                                        "description": "Employee bank account number",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "office_phone": {
                                        "description": "Employee office phone",
                                        "type": "string",
                                        "maxLength": 20,
                                        "nullable": true
                                    },
                                    "mobile_phone": {
                                        "description": "Employee mobile phone",
                                        "type": "string",
                                        "maxLength": 20,
                                        "nullable": true
                                    },
                                    "permanent_address": {
                                        "description": "Employee permanent address",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "current_address": {
                                        "description": "Employee current address",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "stay_with": {
                                        "description": "Employee stays with",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "military_status": {
                                        "description": "Employee military status",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "marital_status": {
                                        "description": "Employee marital status",
                                        "type": "string",
                                        "maxLength": 20,
                                        "nullable": true
                                    },
                                    "spouse_name": {
                                        "description": "Employee spouse name",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "spouse_occupation": {
                                        "description": "Employee spouse occupation",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "father_name": {
                                        "description": "Employee father name",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "father_occupation": {
                                        "description": "Employee father occupation",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "mother_name": {
                                        "description": "Employee mother name",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "mother_occupation": {
                                        "description": "Employee mother occupation",
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "driver_license_number": {
                                        "description": "Employee driver license number",
                                        "type": "string",
                                        "maxLength": 50,
                                        "nullable": true
                                    },
                                    "email": {
                                        "description": "Employee email address",
                                        "type": "string",
                                        "format": "email",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Employee"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Employees"
                ],
                "summary": "Delete an employee",
                "description": "Deletes an employee by ID",
                "operationId": "deleteEmployee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employees/site-records": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Get Site records",
                "description": "Returns a list of all work locations/sites",
                "operationId": "getSiteRecords",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Site records retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Main Office"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Main Street"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employees/filter": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Filter employees by criteria",
                "description": "Returns employees filtered by the provided criteria",
                "operationId": "filterEmployees",
                "parameters": [
                    {
                        "name": "staff_id",
                        "in": "query",
                        "description": "Staff ID to filter by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Employee status to filter by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Expats",
                                "Local ID",
                                "Local non ID"
                            ]
                        }
                    },
                    {
                        "name": "subsidiary",
                        "in": "query",
                        "description": "Employee subsidiary to filter by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SMRU",
                                "BHF"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered employees retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employees retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Employee"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No employees found matching the criteria",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No employees found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employees/{id}/profile-picture": {
            "post": {
                "tags": [
                    "Employees"
                ],
                "summary": "Upload profile picture",
                "description": "Upload a profile picture for an employee",
                "operationId": "uploadProfilePictureEmployee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Profile picture file",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "profile_picture"
                                ],
                                "properties": {
                                    "profile_picture": {
                                        "description": "Profile picture file (jpeg, png, jpg, gif, svg, max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile picture uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile picture uploaded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "profile_picture": {
                                                    "type": "string",
                                                    "example": "employee/profile_pictures/image.jpg"
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "example": "http://example.com/storage/employee/profile_pictures/image.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employees/upload": {
            "post": {
                "tags": [
                    "Employees"
                ],
                "summary": "Upload employee data from Excel file",
                "description": "Upload employee data from Excel file",
                "operationId": "uploadEmployeeData",
                "requestBody": {
                    "description": "Excel file containing employee data",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "Excel file containing employee data",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee data uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee data uploaded successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employments": {
            "get": {
                "tags": [
                    "Employments"
                ],
                "summary": "Get all employment records",
                "description": "Returns a list of all employment records",
                "operationId": "getEmployments",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Employment"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employments retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Employments"
                ],
                "summary": "Create a new employment record",
                "description": "Creates a new employment record with the provided data",
                "operationId": "storeEmployment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "employee_id",
                                    "employment_type_id",
                                    "start_date",
                                    "position_id",
                                    "department_id",
                                    "work_location_id",
                                    "position_salary",
                                    "grant_items_id"
                                ],
                                "properties": {
                                    "employee_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "employment_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-15"
                                    },
                                    "probation_end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-04-15",
                                        "nullable": true
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15",
                                        "nullable": true
                                    },
                                    "position_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "work_location_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "position_salary": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50000
                                    },
                                    "probation_salary": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 45000,
                                        "nullable": true
                                    },
                                    "supervisor_id": {
                                        "type": "integer",
                                        "example": 2,
                                        "nullable": true
                                    },
                                    "employee_tax": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 7,
                                        "nullable": true
                                    },
                                    "fte": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "health_welfare": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "pvd": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "saving_fund": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "social_security_id": {
                                        "type": "string",
                                        "example": "SSN12345",
                                        "nullable": true
                                    },
                                    "grant_items_id": {
                                        "description": "Reference to the grant item for position limit",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Employment"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employment created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or position full"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employments/{id}": {
            "get": {
                "tags": [
                    "Employments"
                ],
                "summary": "Get employment record by ID",
                "description": "Returns a specific employment record by ID",
                "operationId": "getEmployment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of employment record to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Employment"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employment retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employment not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Employments"
                ],
                "summary": "Update an existing employment record",
                "description": "Updates an employment record with the provided data",
                "operationId": "updateEmployment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of employment record to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "employee_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "employment_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-15"
                                    },
                                    "probation_end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-04-15",
                                        "nullable": true
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15",
                                        "nullable": true
                                    },
                                    "position_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "work_location_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "position_salary": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50000
                                    },
                                    "probation_salary": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 45000,
                                        "nullable": true
                                    },
                                    "supervisor_id": {
                                        "type": "integer",
                                        "example": 2,
                                        "nullable": true
                                    },
                                    "employee_tax": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 7,
                                        "nullable": true
                                    },
                                    "fte": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "health_welfare": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "pvd": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "saving_fund": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "social_security_id": {
                                        "type": "string",
                                        "example": "SSN12345",
                                        "nullable": true
                                    },
                                    "grant_items_id": {
                                        "description": "Reference to the grant item",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Employment"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employment updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employment not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Employments"
                ],
                "summary": "Delete an employment record",
                "description": "Deletes an employment record by ID",
                "operationId": "deleteEmployment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of employment record to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employment deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employment not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employments/employment-grant-allocations": {
            "post": {
                "tags": [
                    "Employments"
                ],
                "summary": "Add an employment grant allocation",
                "description": "Creates a new employment grant allocation for an employee",
                "operationId": "addEmploymentGrantAllocation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "employment_id",
                                    "grant_items_id",
                                    "level_of_effort",
                                    "start_date"
                                ],
                                "properties": {
                                    "employment_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "grant_items_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "level_of_effort": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-31"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employment grant allocation added successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EmploymentGrantAllocation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Grant position limit reached",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot add more allocations. Grant position limit reached."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/employments/employment-grant-allocations/{id}": {
            "delete": {
                "tags": [
                    "Employments"
                ],
                "summary": "Delete an employment grant allocation",
                "description": "Deletes an employment grant allocation by ID",
                "operationId": "deleteEmploymentGrantAllocation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employment grant allocation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employment grant allocation deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employment grant allocation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employment grant allocation not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/grants/upload": {
            "post": {
                "tags": [
                    "Grants"
                ],
                "summary": "Upload grant data from Excel file",
                "description": "Upload an Excel file with multiple sheets containing grant header and item records",
                "operationId": "6e724c8994368d8c0c75c1eaebe4d4f5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Excel file to upload (xlsx, xls, csv)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Grant data imported successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Grant data import completed"
                                        },
                                        "processed_grants": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "warnings": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Import failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to import grant data"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/grants": {
            "get": {
                "tags": [
                    "Grants"
                ],
                "summary": "List all grants with their items",
                "description": "Returns a list of grants and their associated items.",
                "operationId": "getGrants",
                "responses": {
                    "200": {
                        "description": "List of grants with items retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Grants retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "GR-2023-001"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Health Initiative Grant"
                                                    },
                                                    "grant_items": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "grant_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "bg_line": {
                                                                    "type": "string",
                                                                    "example": "BL-123"
                                                                },
                                                                "grant_position": {
                                                                    "type": "string",
                                                                    "example": "Project Manager"
                                                                },
                                                                "grant_salary": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 75000
                                                                },
                                                                "grant_benefit": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 15000
                                                                },
                                                                "grant_level_of_effort": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 0.75
                                                                },
                                                                "grant_position_number": {
                                                                    "type": "string",
                                                                    "example": "POS-001"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - User not logged in or token expired"
                    },
                    "403": {
                        "description": "Unauthorized - User does not have permission to access grants"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve grants"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Grants"
                ],
                "summary": "Create a new grant",
                "description": "Store a new grant with the provided details",
                "operationId": "a14c269cef568884cae7f1354a4111de",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "name"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "GR-2023-001"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Health Initiative Grant"
                                    },
                                    "budget_line": {
                                        "type": "string",
                                        "example": "BL-123",
                                        "nullable": true
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-31",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Grant created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Grant"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/grants/items": {
            "post": {
                "tags": [
                    "Grants"
                ],
                "summary": "Store a new grant item",
                "description": "Creates a new grant item associated with an existing grant",
                "operationId": "storeGrantItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "grant_id",
                                    "bg_line"
                                ],
                                "properties": {
                                    "grant_id": {
                                        "description": "ID of the existing grant",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "bg_line": {
                                        "description": "Budget line identifier",
                                        "type": "string",
                                        "example": "BL-123"
                                    },
                                    "grant_position": {
                                        "description": "Position title",
                                        "type": "string",
                                        "example": "Project Manager"
                                    },
                                    "grant_salary": {
                                        "description": "Salary amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 75000
                                    },
                                    "grant_benefit": {
                                        "description": "Benefits amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 15000
                                    },
                                    "grant_level_of_effort": {
                                        "description": "Level of effort (0-1)",
                                        "type": "number",
                                        "format": "float",
                                        "example": 0.75
                                    },
                                    "grant_position_number": {
                                        "description": "Position identifier",
                                        "type": "string",
                                        "example": "POS-001"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Grant item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GrantItem"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or duplicate item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Duplicate item with this BG Line already exists for this grant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - User not logged in or token expired"
                    },
                    "403": {
                        "description": "Unauthorized - User does not have permission"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create grant item"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/grant-items/{id}": {
            "put": {
                "tags": [
                    "Grants"
                ],
                "summary": "Update a grant item",
                "description": "Update an existing grant item by ID",
                "operationId": "5e7d28ef53a8cc164051445cb2dcfaff",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Grant item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "grant_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "bg_line": {
                                        "type": "string",
                                        "example": "BG-123"
                                    },
                                    "grant_position": {
                                        "type": "string",
                                        "example": "Project Manager"
                                    },
                                    "grant_salary": {
                                        "type": "number",
                                        "example": 5000
                                    },
                                    "grant_benefit": {
                                        "type": "number",
                                        "example": 1000
                                    },
                                    "grant_level_of_effort": {
                                        "type": "number",
                                        "example": 0.75
                                    },
                                    "grant_position_number": {
                                        "type": "string",
                                        "example": "P-123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Grant item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GrantItem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Grant item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Grant item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized - User does not have permission"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Grants"
                ],
                "summary": "Delete a grant item",
                "description": "Delete a specific grant item by ID",
                "operationId": "015c940ac759ceb7ca52dfcd8f945ef5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Grant item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Grant item deleted successfully"
                    },
                    "404": {
                        "description": "Grant item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Grant item not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized - User does not have permission"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete grant item"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/grants/{id}": {
            "put": {
                "tags": [
                    "Grants"
                ],
                "summary": "Update a grant",
                "description": "Updates an existing grant with the provided data",
                "operationId": "updateGrant",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the grant to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Grant Name"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "GR-2023-002"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated grant description"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-12-31"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Grant updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Grant"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Grant updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Grant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Grant not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update grant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Grants"
                ],
                "summary": "Delete a grant",
                "description": "Delete a grant and all its associated items",
                "operationId": "37a4ce1aa26bd674ef4462e4fd812c5f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Grant ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grant deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Grant deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Grant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Grant not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized - User does not have permission"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete grant"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/grants/grant-positions": {
            "get": {
                "tags": [
                    "Grants"
                ],
                "summary": "Get grant statistics with position recruitment status",
                "description": "Retrieves statistics for all grants including position recruitment status",
                "operationId": "getGrantStatistics",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Grant statistics retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "grant_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "grant_code": {
                                                        "type": "string",
                                                        "example": "GR-001"
                                                    },
                                                    "grant_name": {
                                                        "type": "string",
                                                        "example": "Research Grant"
                                                    },
                                                    "positions": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "position": {
                                                                    "type": "string",
                                                                    "example": "Researcher"
                                                                },
                                                                "budget_line": {
                                                                    "type": "string",
                                                                    "example": "BL-123"
                                                                },
                                                                "manpower": {
                                                                    "type": "integer",
                                                                    "example": 3
                                                                },
                                                                "recruited": {
                                                                    "type": "integer",
                                                                    "example": 2
                                                                },
                                                                "finding": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "total_manpower": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "total_recruited": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "total_finding": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Completed",
                                                            "Active",
                                                            "Pending"
                                                        ],
                                                        "example": "Active"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - User not logged in or token expired"
                    },
                    "403": {
                        "description": "Unauthorized - User does not have permission to access grant statistics"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve grant statistics"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/interviews": {
            "get": {
                "tags": [
                    "Interviews"
                ],
                "summary": "Get all interviews",
                "description": "Get a list of all interviews",
                "operationId": "d6c874e8fb2ed408dfbddb9f5d75333f",
                "responses": {
                    "200": {
                        "description": "Interviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Interviews retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "candidate_id": {
                                                        "type": "integer",
                                                        "nullable": true
                                                    },
                                                    "interviewer_name": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "interview_date": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "start_time": {
                                                        "type": "string",
                                                        "format": "time"
                                                    },
                                                    "end_time": {
                                                        "type": "string",
                                                        "format": "time"
                                                    },
                                                    "interview_mode": {
                                                        "type": "string",
                                                        "enum": [
                                                            "in-person",
                                                            "virtual"
                                                        ]
                                                    },
                                                    "interview_status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "scheduled",
                                                            "completed",
                                                            "cancelled"
                                                        ]
                                                    },
                                                    "score": {
                                                        "type": "number",
                                                        "nullable": true
                                                    },
                                                    "feedback": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "created_by": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "updated_by": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve interviews"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Interviews"
                ],
                "summary": "Create a new interview",
                "description": "Create a new interview record",
                "operationId": "b5d1a4b2536a5a593659901c3887a6d6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "interview_status"
                                ],
                                "properties": {
                                    "candidate_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "interviewer_name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "interview_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "interview_mode": {
                                        "type": "string",
                                        "enum": [
                                            "in-person",
                                            "virtual"
                                        ]
                                    },
                                    "interview_status": {
                                        "type": "string",
                                        "enum": [
                                            "scheduled",
                                            "completed",
                                            "cancelled"
                                        ]
                                    },
                                    "score": {
                                        "type": "number",
                                        "nullable": true
                                    },
                                    "feedback": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "updated_by": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Interview created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Interview created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create interview"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/interviews/{id}": {
            "get": {
                "tags": [
                    "Interviews"
                ],
                "summary": "Get interview details",
                "description": "Get details of a specific interview",
                "operationId": "84542473a802321f8503879facb61d60",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Interview ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Interview retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Interview retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Interview not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Interview not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve interview"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Interviews"
                ],
                "summary": "Update an interview",
                "description": "Update an existing interview record",
                "operationId": "fde8508f0873af40ba384643142a37dc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Interview ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "candidate_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "interviewer_name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "interview_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "interview_mode": {
                                        "type": "string",
                                        "enum": [
                                            "in-person",
                                            "virtual"
                                        ]
                                    },
                                    "interview_status": {
                                        "type": "string",
                                        "enum": [
                                            "scheduled",
                                            "completed",
                                            "cancelled"
                                        ]
                                    },
                                    "score": {
                                        "type": "number",
                                        "nullable": true
                                    },
                                    "feedback": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "updated_by": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Interview updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Interview updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Interview not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Interview not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update interview"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Interviews"
                ],
                "summary": "Delete an interview",
                "description": "Delete an existing interview record",
                "operationId": "7aba3cb1a55aaa9b3b17a7c266b3001c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Interview ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Interview deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Interview deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Interview not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Interview not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete interview"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/positions": {
            "get": {
                "tags": [
                    "Positions"
                ],
                "summary": "Get all positions",
                "description": "Returns a list of all positions",
                "operationId": "getPositions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Position"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Positions"
                ],
                "summary": "Create a new position",
                "description": "Creates a new position record",
                "operationId": "storePosition",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Software Engineer"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Develops software applications"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Position created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Position"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Position created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/positions/{id}": {
            "get": {
                "tags": [
                    "Positions"
                ],
                "summary": "Get a specific position",
                "description": "Returns a specific position by ID",
                "operationId": "showPosition",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the position",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Position"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Position not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Positions"
                ],
                "summary": "Update a position",
                "description": "Updates an existing position record",
                "operationId": "updatePosition",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the position to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Senior Software Engineer"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Leads software development projects"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Position updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Position"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Position updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Position not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Positions"
                ],
                "summary": "Delete a position",
                "description": "Deletes a position record",
                "operationId": "deletePosition",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the position to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Position deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Position not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns a list of all users with their roles and permissions",
                "operationId": "indexUsers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "john@example.com"
                                            },
                                            "last_login_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "roles": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "Admin"
                                                }
                                            },
                                            "permissions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "user.read"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user",
                "description": "Create a new user.",
                "operationId": "262eb5ca1fdea354023c0a8870442c1e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "hr-manager",
                                            "hr-assistant",
                                            "employee"
                                        ],
                                        "example": "employee"
                                    },
                                    "profile_picture": {
                                        "description": "Optional profile picture file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating user"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "description": "Display a single user.",
                "operationId": "6946bbab7898f59a09e3c8e529a38907",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing user",
                "description": "Update a user.",
                "operationId": "05028d02ea3e9a99abd6260cfe05b179",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "profile_picture": {
                                        "description": "Optional profile picture file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "description": "Delete a user.",
                "operationId": "b3d28da5dc9de7fc1bd425f93b54ff7b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/profile-picture": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile picture",
                "description": "Update user profile picture.",
                "operationId": "77a307591501c7e540f0204d7ccda6c7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "profile_picture"
                                ],
                                "properties": {
                                    "profile_picture": {
                                        "description": "Profile picture file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile picture updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile picture updated successfully"
                                        },
                                        "profile_picture": {
                                            "type": "string",
                                            "example": "profile_pictures/image.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/username": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user name",
                "description": "Update user name.",
                "operationId": "802d461d381ce58b4d221c8fd4bcecd4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Username updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Username updated successfully"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/email": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user email",
                "description": "Update user email.",
                "operationId": "5f93bb4fb100eaf0cb0b4d6a51896ebd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email updated successfully"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john@example.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/password": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user password",
                "description": "Update user password.",
                "operationId": "fd7db07f5a5df29f32f21cbfb2ed87d9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password",
                                    "confirm_password"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "current123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new123"
                                    },
                                    "confirm_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "new123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Current password is incorrect"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get authenticated user details",
                "description": "Returns the authenticated user's basic details along with their roles and permissions.",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "id",
                                        "name",
                                        "email",
                                        "roles",
                                        "permissions"
                                    ],
                                    "properties": {
                                        "id": {
                                            "description": "Unique identifier for the user",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "description": "Full name of the user",
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "description": "Email address of the user",
                                            "type": "string",
                                            "format": "email",
                                            "example": "john@example.com"
                                        },
                                        "last_login_at": {
                                            "description": "The date and time when the user last logged in",
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true
                                        },
                                        "roles": {
                                            "description": "List of roles assigned to the user",
                                            "type": "array",
                                            "items": {
                                                "description": "A role name",
                                                "type": "string",
                                                "example": "Admin"
                                            }
                                        },
                                        "permissions": {
                                            "description": "List of permissions granted to the user",
                                            "type": "array",
                                            "items": {
                                                "description": "A permission identifier",
                                                "type": "string",
                                                "example": "user.read"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - The request does not have valid authentication credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/worklocations": {
            "get": {
                "tags": [
                    "Work Locations"
                ],
                "summary": "Get all work locations",
                "description": "Returns a list of all work locations",
                "operationId": "getWorkLocations",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WorkLocation"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Work Locations"
                ],
                "summary": "Create a new work location",
                "description": "Creates a new work location record",
                "operationId": "storeWorkLocation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "MKT"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Site"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Work location created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/WorkLocation"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Work location created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/worklocations/{id}": {
            "get": {
                "tags": [
                    "Work Locations"
                ],
                "summary": "Get a specific work location",
                "description": "Returns a specific work location by ID",
                "operationId": "getWorkLocation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the work location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/WorkLocation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Work location not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Work Locations"
                ],
                "summary": "Update a work location",
                "description": "Updates an existing work location",
                "operationId": "updateWorkLocation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the work location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "WPA"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Site"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Work location updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/WorkLocation"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Work location updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Work location not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Work Locations"
                ],
                "summary": "Delete a work location",
                "description": "Deletes a work location",
                "operationId": "deleteWorkLocation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the work location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Work location deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Work location deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Work location not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Candidate": {
                "title": "Candidate",
                "description": "Candidate model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "candidate_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "phone": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "resume": {
                        "type": "string",
                        "example": "resume_file.pdf"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Department": {
                "title": "Department",
                "description": "Department model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Human Resources"
                    },
                    "description": {
                        "type": "string",
                        "example": "Department responsible for HR activities"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "admin"
                    },
                    "updated_by": {
                        "type": "string",
                        "example": "admin"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Employee": {
                "required": [
                    "staff_id",
                    "first_name",
                    "last_name",
                    "gender",
                    "date_of_birth",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "staff_id": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "subsidiary": {
                        "type": "string",
                        "default": "SMRU",
                        "enum": [
                            "SMRU",
                            "BHF"
                        ]
                    },
                    "user_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "middle_name": {
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true
                    },
                    "profile_picture": {
                        "type": "string",
                        "nullable": true
                    },
                    "gender": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date"
                    },
                    "status": {
                        "type": "string",
                        "default": "Expats",
                        "enum": [
                            "Expats",
                            "Local ID",
                            "Local non ID"
                        ]
                    },
                    "religion": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "birth_place": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "identification_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "social_security_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "tax_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "passport_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "bank_name": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "bank_branch": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "bank_account_name": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "bank_account_number": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "office_phone": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true
                    },
                    "mobile_phone": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true
                    },
                    "permanent_address": {
                        "type": "string",
                        "nullable": true
                    },
                    "current_address": {
                        "type": "string",
                        "nullable": true
                    },
                    "stay_with": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "military_status": {
                        "type": "boolean",
                        "default": false
                    },
                    "marital_status": {
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true
                    },
                    "spouse_name": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "spouse_occupation": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "father_name": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "father_occupation": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "mother_name": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "mother_occupation": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "driver_license_number": {
                        "type": "string",
                        "maxLength": 50,
                        "nullable": true
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Employment": {
                "required": [
                    "employee_id",
                    "employment_type_id",
                    "start_date",
                    "position_id",
                    "department_id",
                    "work_location_id",
                    "position_salary",
                    "probation_salary"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "employee_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "employment_type_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "probation_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "position_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "department_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "work_location_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "position_salary": {
                        "type": "number",
                        "format": "float"
                    },
                    "probation_salary": {
                        "type": "number",
                        "format": "float"
                    },
                    "supervisor_id": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "employee_tax": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "fte": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean",
                        "default": true
                    },
                    "health_welfare": {
                        "type": "boolean",
                        "default": false
                    },
                    "pvd": {
                        "type": "boolean",
                        "default": false
                    },
                    "saving_fund": {
                        "type": "boolean",
                        "default": false
                    },
                    "social_security_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "EmploymentGrantAllocation": {
                "title": "Employment Grant Allocation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "employment_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "grant_items_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "level_of_effort": {
                        "type": "number",
                        "format": "float",
                        "example": 0.75
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-12-31",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "EmploymentHistory": {
                "required": [
                    "employment_id",
                    "employee_id",
                    "employment_type_id",
                    "start_date",
                    "position_id",
                    "department_id",
                    "work_location_id",
                    "position_salary"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "employment_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "employee_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "employment_type_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "probation_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "position_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "department_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "work_location_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "position_salary": {
                        "type": "number",
                        "format": "float"
                    },
                    "probation_salary": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "supervisor_id": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "employee_tax": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "fte": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean",
                        "default": true
                    },
                    "health_welfare": {
                        "type": "boolean",
                        "default": false
                    },
                    "pvd": {
                        "type": "boolean",
                        "default": false
                    },
                    "saving_fund": {
                        "type": "boolean",
                        "default": false
                    },
                    "social_security_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "grant_item_id": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "EmploymentType": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Grant": {
                "title": "Grant",
                "description": "Grant model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Research Grant 2023"
                    },
                    "code": {
                        "type": "string",
                        "example": "RG-2023-001"
                    },
                    "description": {
                        "type": "string",
                        "example": "Funding for research activities",
                        "nullable": true
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-12-31",
                        "nullable": true
                    },
                    "created_by": {
                        "type": "string",
                        "example": "admin",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "example": "admin",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "grant_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GrantItem"
                        }
                    }
                },
                "type": "object"
            },
            "GrantItem": {
                "title": "Grant Item",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "grant_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "bg_line": {
                        "type": "string",
                        "example": "BL-123",
                        "nullable": true
                    },
                    "grant_position": {
                        "type": "string",
                        "example": "Project Manager",
                        "nullable": true
                    },
                    "grant_salary": {
                        "type": "number",
                        "format": "float",
                        "example": 75000,
                        "nullable": true
                    },
                    "grant_benefit": {
                        "type": "number",
                        "format": "float",
                        "example": 15000,
                        "nullable": true
                    },
                    "grant_level_of_effort": {
                        "type": "string",
                        "example": "0.75",
                        "nullable": true
                    },
                    "grant_position_number": {
                        "type": "string",
                        "example": "POS-001",
                        "nullable": true
                    },
                    "grant_cost_by_monthly": {
                        "type": "string",
                        "example": "7500",
                        "nullable": true
                    },
                    "grant_total_cost_by_person": {
                        "type": "string",
                        "example": "90000",
                        "nullable": true
                    },
                    "grant_benefit_fte": {
                        "type": "number",
                        "format": "float",
                        "example": 0.75,
                        "nullable": true
                    },
                    "position_id": {
                        "type": "string",
                        "example": "P123",
                        "nullable": true
                    },
                    "grant_total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 90000,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Interview": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "candidate_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "grant_position_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "interviewer_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "interview_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time",
                        "nullable": true
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time",
                        "nullable": true
                    },
                    "interview_mode": {
                        "type": "string",
                        "enum": [
                            "in-person",
                            "virtual"
                        ],
                        "nullable": true
                    },
                    "interview_status": {
                        "type": "string",
                        "enum": [
                            "scheduled",
                            "completed",
                            "cancelled"
                        ]
                    },
                    "score": {
                        "type": "number",
                        "nullable": true
                    },
                    "feedback": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "LetterTemplate": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200,
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "maxLength": 100,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Position": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "last_login_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_login_ip": {
                        "type": "string",
                        "example": "192.168.1.1"
                    },
                    "created_by": {
                        "type": "string",
                        "example": "admin"
                    },
                    "updated_by": {
                        "type": "string",
                        "example": "admin"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "admin"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "user.read"
                        }
                    }
                },
                "type": "object"
            },
            "WorkLocation": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_by": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated_by": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        },
        {
            "name": "Departments",
            "description": "API Endpoints for managing departments"
        },
        {
            "name": "Employees",
            "description": "API Endpoints for Employee management"
        },
        {
            "name": "Employments",
            "description": "API Endpoints for managing employee employment records"
        },
        {
            "name": "Grants",
            "description": "API Endpoints for managing grants"
        },
        {
            "name": "Interviews",
            "description": "API Endpoints for managing interviews"
        },
        {
            "name": "Positions",
            "description": "API Endpoints for managing positions"
        },
        {
            "name": "Users",
            "description": "API Endpoints for user management"
        },
        {
            "name": "Work Locations",
            "description": "API Endpoints for managing work locations"
        }
    ]
}